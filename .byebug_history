exit
ap filtered_reports
filtered_reports.count
detailed_attributes.count
etailed_attributes.count
filtered_reports.count
images.count
ap images
images
exit
c
url
c
url
c
ap summary_attributes.map{|s| s["ml_num"]}.sort.uniq
ap summary_attributes.map{|s| s["ml_num"]}.sort
ap summary_attributes.map{|s| s["ml_num"]}
ap filtered_reports[1]
ap filtered_reports.map{|a|a["MLS#:"]}
ap filtered_reports
ap filtered_reports.map{|a|a["MLS#:"]}
summary_attributes
images.count
images
ap filtered_reports
filtered_reports.count
c
ap detailed_attributes.uniq{|a| a["MLS#:"]}
ap detailed_attributes.uniq
ap detailed_attributes[0]
ap detailed_attributes.map{|d| d["MLS#:"]}[0]
ap detailed_attributes.map{|d| d["MLS#:"]}
detailed_attributes.map{|d| d["MLS#:"]}
ap detailed_attributes
detailed_attributes.count
images.count
detailed_reports.count
detailed_reports[0]
ap detailed_attributes.map{|fr| fr[ "MLS#:"]}.sort.uniq
ap detailed_attributes[0]
detailed_attributes[0]
detailed_attributes.count
ap filtered_reports.map{|fr| fr[ "MLS#:"]}.sort.uniq
c
ap filtered_reports.map{|fr| fr[ "MLS#:"]}.sort.uniq
ap summary_attributes.map{|s| s["ml_num"]}
c
exit
ap summary_attributes.map{|s| s["ml_num"]}
ap summary_attributes.map{|s| s["ml_num"]}.uniq
ap summary_attributes.map{|s| s["ml_num"]}
summary_attributes.map{|s| s["ml_num"]}
summary_attributes[0]
summary_attributes.count
general_summaries[0]
general_summaries.count
ap filtered_reports.map{|fr| fr[ "MLS#:"]}.sort.uniq
ap filtered_reports.map{|fr| fr[ "MLS#:"]}.sort
general_summaries.count
ap filtered_reports.map{|fr| fr[ "MLS#:"]}
ap filtered_reports[0]
 filtered_reports[0]
print_date
c
print_date
exit
print_date
c
header[regex]
regex = /(\d{1,2})\/(\d{1,2})\/(\d{4})/
header[regex]
regex = "/(\d{1,2})\/(\d{1,2})\/(\d{4})/"
header
header[regex]
regex = "\d{1,2}/\d{1,2}/\d{4}"
header[regex]
regex = "/\d{2}\/\d{2}\/\d{4}"
header[regex]
regex = "/\d{2}\/\d{2}\/\d{4}/"
header
regex = "/\d{1,2}\/\d{1,2}\/\d{4}/"
header[regex]
header = html.css("div[class=header]").css("div")[5].text
header[regex]
regex = "/\d{1,2}\/\d{1,2}\/\d{4}/"
html.css("div[class=header]").css("div")[5].text
html
print_date
c
filtered_reports
print_date
c
print_date
ap images
images
c
images
html
c
ap summary_attributes.count
ap detailed_attributes.count
images.count
c
ap images.map{|m|m}
ap images.map{|m|}
ap images
images.count
ap detailed_attributes.count
ap summary_attributes.count
ap detailed_attributes
detailed_attributes
ap summary_attributes
summary_attributes
entry_detailed_attributes
images
c
ap images_links
images_links
c
urls
exit
c
images['multi-photos']
n
image.has_attribute?('data-multi-photos')
urls
c
image.has_attribute?('data-multi-photos')
image
c
image.has_attribute?('data-multi-photos1')
image.has_attribute?('data-multi-photos')
image.has_attribute?
image.has_attribute
image.node_name
image
image.methods
image[3][1]
image[3][1]['multi-photosa']
image.as_json[3][1]['multi-photosa']
image.as_json[3][1]['multi-photos']
c
image
ap image.as_json[3][1]['multi-photos']
c
ap image.as_json[3][1]['multi-photos']
c
ap image.as_json[3][1]['multi-photos']
c
ap image.as_json[3][1]['multi-photos']
c
ap image.as_json[3][1]['multi-photos']
ap image.as_json[3][1]['multi-photoss']
ap image.as_json[3][1]['multi-photos']
ap image.as_json[3][1]
 image.as_json[3][1]
 image.as_json[3]
 image.as_json[4]
c
 image.as_json[4]
 image.as_json[3]
 image.as_json[3][1]
c
exit
n
mls_id
n
urls
n
c
relaod!
ap JSON.parse(image.as_json[3][1])
JSON.parse(image.as_json[3][1])
image.as_json[3][1]['multi-photos']
image.as_json[3][1]
image.as_json[3]
image.as_json[2]
image.as_json[0]
image
image.as_json[0][3]
image.as_json[0][2]
image.as_json[0][4]
c
image.as_json[0][4]
image.as_json[0][1]
image.as_json[0]
image.as_json[4]
image.as_json[3]
image.as_json[2]
image.as_json[1]
image.as_json[0]
image.as_json
c
image.as_json
c
image.as_json
c
image.as_json
image.as_json[5]
c
image.as_json[5]
image.as_json[4]
image.as_json[3]
image.as_json[2]
image.as_json[1]
image.as_json[0]
image.as_json
image['img']
image.search('img')
image.search('data-multi-photos')
image
image.css('data-multi-photos')
c
image.css('data-multi-photos')
c
image.css('data-multi-photos')
image
c
image
c
image
c
image
c
image
c
image
JSON.parse(image.as_json[3][1])
c
JSON.parse(image.as_json[3][1])
c
JSON.parse(image.as_json[3][1])
c
JSON.parse(image.as_json[3][1])
c
n
JSON.parse(image.as_json[3][1])
image.as_json[3][1]
c
html.css("img[class='formitem imageset multi-photo']")[0]
ap html.css("img[class='formitem imageset multi-photo']")[0]
html.css("img[class='formitem imageset multi-photo']")[0]
html.css("img")[0].css('data-multi-photos')
html.css("img")[0]
html.css("img")
html.css("img"
html.css("img")
page.css("img")
